{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/src/js/map-scripts/geolocation.js"],"names":["$","setTimeout","adbdp_geolocation","select_listing_map","x","document","querySelector","get_lat","get_lng","getLocation","navigator","geolocation","getCurrentPosition","showPosition","showError","value","position","lat","coords","latitude","lon","longitude","displayCurrentLocation","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","displayLocation","geocoder","google","maps","Geocoder","latlng","LatLng","geocode","latLng","componentRestrictions","country","results","status","GeocoderStatus","OK","add","formatted_address","split","count","length","state","city","get_loc_btn","addEventListener","lng","ajax","url","type","data","success","val","display_name","on","jQuery"],"mappings":"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","file":"../js/global-geolocation.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","(function($) {\n        /* $(\"button[type='reset']\").on(\"click\", function (){\n        $(\"#atbd_rs_value\").val(0);\n        $(\".atbdpr_amount\").text(0 + miles);\n        slider_range.each(function () {\n            $(this).slider({\n                range: \"min\",\n                min: 0,\n                max: 1000,\n                value: 0,\n                slide: function (event, ui) {\n                    $(\".atbdpr_amount\").text(ui.value + miles);\n                    $(\"#atbd_rs_value\").val(ui.value);\n                }\n            });\n        });\n        $(\"#at_biz_dir-location, #at_biz_dir-category\").val('').trigger('change');\n    }); */\n        /* get current location */\n        setTimeout(() => {\n                if (adbdp_geolocation.select_listing_map === 'google') {\n                        (function() {\n                                const x = document.querySelector('.location-name');\n                                const get_lat = document.querySelector('#cityLat');\n                                const get_lng = document.querySelector('#cityLng');\n\n                                function getLocation() {\n                                        if (navigator.geolocation) {\n                                                navigator.geolocation.getCurrentPosition(showPosition, showError);\n                                        } else {\n                                                x.value = 'Geolocation is not supported by this browser.';\n                                        }\n                                }\n\n                                function showPosition(position) {\n                                        lat = position.coords.latitude;\n                                        lon = position.coords.longitude;\n                                        displayCurrentLocation(lat, lon);\n                                        get_lat.value = lat;\n                                        get_lng.value = lon;\n                                }\n\n                                function showError(error) {\n                                        switch (error.code) {\n                                                case error.PERMISSION_DENIED:\n                                                        x.value = 'User denied the request for Geolocation.';\n                                                        break;\n                                                case error.POSITION_UNAVAILABLE:\n                                                        x.value = 'Location information is unavailable.';\n                                                        break;\n                                                case error.TIMEOUT:\n                                                        x.value = 'The request to get user location timed out.';\n                                                        break;\n                                                case error.UNKNOWN_ERROR:\n                                                        x.value = 'An unknown error occurred.';\n                                                        break;\n                                        }\n                                }\n\n                                function displayLocation(latitude, longitude) {\n                                        let geocoder;\n                                        geocoder = new google.maps.Geocoder();\n                                        const latlng = new google.maps.LatLng(latitude, longitude);\n                                        geocoder.geocode({\n                                                latLng: latlng,\n                                                componentRestrictions: { country: 'GB' }\n                                        },\n                                                function(results, status) {\n                                                if (status == google.maps.GeocoderStatus.OK) {\n                                                        if (results[0]) {\n                                                                const add = results[0].formatted_address;\n                                                                const value = add.split(',');\n\n                                                                count = value.length;\n                                                                country = value[count - 1];\n                                                                state = value[count - 2];\n                                                                city = value[count - 3];\n                                                                x.value = city;\n                                                        } else {\n                                                                x.value = 'address not found';\n                                                        }\n                                                } else {\n                                                        x.value = `Geocoder failed due to: ${status}`;\n                                                }\n                                        });\n                                }\n\n                                function displayCurrentLocation(latitude, longitude) {\n                                        let geocoder;\n                                        geocoder = new google.maps.Geocoder();\n                                        const latlng = new google.maps.LatLng(latitude, longitude);\n                                        geocoder.geocode({\n                                                latLng: latlng\n                                        },\n                                                function(results, status) {\n                                                if (status == google.maps.GeocoderStatus.OK) {\n                                                        if (results[0]) {\n                                                                const add = results[0].formatted_address;\n                                                                const value = add.split(',');\n\n                                                                count = value.length;\n                                                                country = value[count - 1];\n                                                                state = value[count - 2];\n                                                                city = value[count - 3];\n                                                                x.value = city;\n                                                        } else {\n                                                                x.value = 'address not found';\n                                                        }\n                                                } else {\n                                                        x.value = `Geocoder failed due to: ${status}`;\n                                                }\n                                        });\n                                }\n\n                                const get_loc_btn = document.querySelector('.directorist-filter-location-icon');\n                                get_loc_btn.addEventListener('click', function() {\n                                        getLocation();\n                                });\n                        })();\n                } else if (adbdp_geolocation.select_listing_map === 'openstreet') {\n                        function displayLocation(position) {\n                                const lat = position.coords.latitude;\n                                const lng = position.coords.longitude;\n\n                                $.ajax({\n                                        url: `https://nominatim.openstreetmap.org/reverse?format=json&lon=${lng}&lat=${lat}`,\n                                        type: 'POST',\n                                        data: {},\n                                        success(data) {\n                                                $('#address,.atbdp-search-address').val(data.display_name);\n                                                $('#cityLat').val(lat);\n                                                $('#cityLng').val(lng);\n                                        },\n                                });\n                        }\n\n                        $('.directorist-filter-location-icon').on('click', () => {\n                                navigator.geolocation.getCurrentPosition(displayLocation);\n                        });\n                }\n        }, 1000);\n})(jQuery);\n"],"sourceRoot":""}